name: Release

on:
  push:
    branches: [main]

jobs:
  build-and-release:
    runs-on: ${{ matrix.os }}

    strategy:
      matrix:
        os: [macos-14, windows-latest, ubuntu-latest]

    steps:
      - uses: actions/checkout@v4

      - name: Set up Node
        uses: actions/setup-node@v4
        with:
          node-version: 20
          cache: yarn

      - name: Install dependencies
        run: |
          corepack enable
          yarn install --frozen-lockfile

      # Build platform-specific artefacts
      - name: Build application
        run: |
          if [[ "${{ runner.os }}" == "macOS" ]]; then
            yarn package --mac --publish never
          elif [[ "${{ runner.os }}" == "Windows" ]]; then
            yarn package --win --publish never
          else
            yarn package --linux --publish never
          fi

      - name: Upload artefacts
        uses: actions/upload-artifact@v4
        with:
          name: art-${{ runner.os }}
          path: release/build/**

  release:
    needs: build-and-release
    runs-on: ubuntu-latest
    steps:
      - uses: actions/download-artifact@v4
        with:
          path: dist

      - name: Read version
        id: version
        run: echo "::set-output name=tag::v$(jq -r .version < package.json)"

      - name: Create GitHub release
        uses: softprops/action-gh-release@v1
        with:
          tag_name: ${{ steps.version.outputs.tag }}
          name: AudioMid ${{ steps.version.outputs.tag }}
          body: |
            Automated build for commit ${{ github.sha }}.

            Windows and Linux builds are generated automatically but remain untested.
          draft: false
          prerelease: false
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}

      - name: Attach artefacts
        uses: softprops/action-gh-release@v1
        with:
          files: dist/**
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
